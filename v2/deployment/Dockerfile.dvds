# deployment/Dockerfile.dvds
FROM ubuntu:20.04

ENV DEBIAN_FRONTEND=noninteractive

# ROS Noetic 설치
RUN apt-get update && apt-get install -y \
    curl \
    gnupg2 \
    lsb-release \
    && curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add - \
    && echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list

RUN apt-get update && apt-get install -y \
    ros-noetic-desktop-full \
    python3-rosdep \
    python3-rosinstall \
    python3-rosinstall-generator \
    python3-wstool \
    build-essential \
    python3-catkin-tools

# Gazebo 설치
RUN apt-get install -y gazebo11 gazebo11-plugin-base

# ArduPilot SITL 설치
RUN apt-get install -y \
    git \
    python3-pip \
    python3-dev \
    python3-opencv \
    python3-wxgtk4.0 \
    python3-matplotlib \
    python3-lxml \
    python3-pygame

WORKDIR /opt
RUN git clone https://github.com/ArduPilot/ardupilot.git
WORKDIR /opt/ardupilot
RUN git submodule update --init --recursive
RUN Tools/environment_install/install-prereqs-ubuntu.sh -y

# DVDs 설정
WORKDIR /app
COPY external/dvds/ ./dvds/

# ROS 환경 설정
RUN echo "source /opt/ros/noetic/setup.bash" >> ~/.bashrc
RUN rosdep init || true
RUN rosdep update

ENV ROS_MASTER_URI=http://localhost:11311
ENV GAZEBO_MODEL_PATH=/app/dvds/models

CMD ["bash", "-c", "source /opt/ros/noetic/setup.bash && roslaunch dvds dvds.launch"]
